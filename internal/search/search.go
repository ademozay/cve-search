package search

import (
	"github.com/ademozay/vmetric/internal/cve"
	"github.com/ademozay/vmetric/internal/host"
	"github.com/ademozay/vmetric/internal/version"
)

type VulnerabilitySearch struct {
	versionCheckers []version.VersionChecker
}

func New(vc ...version.VersionChecker) *VulnerabilitySearch {
	return &VulnerabilitySearch{
		versionCheckers: vc,
	}
}

func (vs *VulnerabilitySearch) AddVersionChecker(versionChecker version.VersionChecker) {
	vs.versionCheckers = append(vs.versionCheckers, versionChecker)
}

func (vs *VulnerabilitySearch) Search(vulApps []cve.VulnerableApp, localApps []host.Application) []cve.VulnerableApp {
	var matchedApps []cve.VulnerableApp

	for _, vulApp := range vulApps {
		for _, localApp := range localApps {
			for _, versionChecker := range vs.versionCheckers {
				if versionChecker.Vulnerable(localApp, vulApp) {
					matchedApps = append(matchedApps, vulApp)
				}
			}
		}
	}

	return matchedApps
}
