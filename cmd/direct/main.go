package main

import (
	"fmt"
	"log"
	"os"

	"github.com/ademozay/vmetric/internal/cve"
	"github.com/ademozay/vmetric/internal/host"
	"github.com/ademozay/vmetric/internal/search"
	"github.com/ademozay/vmetric/internal/version"
)

func main() {
	cveData, err := os.ReadFile("db.json")
	if err != nil {
		log.Fatal(err)
	}

	localApps := []host.Application{ // FIXME: read from file
		{
			Vendor: "winrar",
			VendorAliases: []string{
				"win-rar",
				"rarlab",
			},
			Name:    "winrar",
			Version: "6.11",
		},
	}

	cve, err := cve.NewCVE(cveData)
	if err != nil {
		log.Fatal(err)
	}

	cpeSpec := "2.3"

	vulApps := cve.Parse(cpeSpec)

	vs := search.New(
		&version.AsIs{},
		&version.Semver{},
	)

	matchedApps := vs.Search(vulApps, localApps)

	for _, app := range matchedApps {
		fmt.Printf("vulnerable app: OS: %s %s %s %+v\n", app.Os, app.Vendor, app.Name, app)
	}
}
