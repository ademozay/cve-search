package main

import (
	"fmt"
	"log"
	"os"

	"github.com/ademozay/vmetric/internal/cve"
	"github.com/ademozay/vmetric/internal/host"
	"github.com/ademozay/vmetric/internal/version"
	"github.com/ademozay/vmetric/internal/vulnerability"
)

func main() {
	cveData, err := os.ReadFile("db.json")
	if err != nil {
		log.Fatal(err)
	}

	apps := []host.Application{ // FIXME: read from file
		{
			Vendor: "winrar",
			VendorAliases: []string{
				"win-rar",
				"rarlab",
			},
			Name:    "winrar",
			Version: "6.11",
		},
	}

	cve, err := cve.NewCVE(cveData)
	if err != nil {
		log.Fatal(err)
	}

	cpeSpec := "2.3"

	vs := vulnerability.NewSearch(*cve, cpeSpec)
	vs.AddVersionChecker(&version.AsIs{})
	vs.AddVersionChecker(&version.Semver{})

	vulnerableApps := vs.Search(apps)

	for _, app := range vulnerableApps {
		fmt.Printf("vulnerable app: %s %s %s\n", app.Vendor, app.Name, app.Version)
	}
}
